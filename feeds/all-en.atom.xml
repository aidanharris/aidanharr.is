<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aidan Harris</title><link href="https://aidanharr.is/" rel="alternate"></link><link href="https://aidanharr.is/feeds/all-en.atom.xml" rel="self"></link><id>https://aidanharr.is/</id><updated>2017-08-04T00:00:00+01:00</updated><entry><title>FreeBSD Storage Server on Libvirt</title><link href="https://aidanharr.is/freebsd-storage-server-libvirt.html" rel="alternate"></link><published>2017-08-04T00:00:00+01:00</published><updated>2017-08-04T00:00:00+01:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2017-08-04:/freebsd-storage-server-libvirt.html</id><summary type="html">&lt;p&gt;This week I suffered a catastrophic storage failure that was entirely my fault! Needless to say this is somewhat annoying. On the other hand this gives me a perfect opportunity to check out FreeBSD and ZFS.&lt;/p&gt;
&lt;h2&gt;Getting the Installation Media&lt;/h2&gt;
&lt;p&gt;This couldn't be easier. The fine folks over at &lt;a href="https://freebsd.org"&gt;freebsd …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This week I suffered a catastrophic storage failure that was entirely my fault! Needless to say this is somewhat annoying. On the other hand this gives me a perfect opportunity to check out FreeBSD and ZFS.&lt;/p&gt;
&lt;h2&gt;Getting the Installation Media&lt;/h2&gt;
&lt;p&gt;This couldn't be easier. The fine folks over at &lt;a href="https://freebsd.org"&gt;freebsd.org&lt;/a&gt; have virtual machine images available. Since we're using libvirt we'll want the &lt;a href="https://download.freebsd.org/ftp/releases/VM-IMAGES/11.1-RELEASE/amd64/Latest/"&gt;qcow2&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;Getting Going&lt;/h2&gt;
&lt;p&gt;I'm not going to talk too much about "getting going" since this is ridiculously easy, even more so if you are using &lt;a href="https://virt-manager.org/"&gt;virt-manager&lt;/a&gt;. If you're using virt-manager simply point it at the qcow2, set the CPU and RAM, boot and you're done!&lt;/p&gt;
&lt;h2&gt;First Steps&lt;/h2&gt;
&lt;h3&gt;Updating the system&lt;/h3&gt;
&lt;p&gt;FreeBSD uses the &lt;a href="https://www.freebsd.org/doc/handbook/pkgng-intro.html"&gt;pkg&lt;/a&gt; package manager. To look for updates simply run &lt;code&gt;pkg update&lt;/code&gt; to apply any needed upgrades run &lt;code&gt;pkg upgrade&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Allowing serial-port access&lt;/h3&gt;
&lt;p&gt;By allowing serial access to FreeBSD you can easily get a login shell using &lt;code&gt;virsh console freebsd11.0&lt;/code&gt; (where freebsd11.0 is the name of your VM).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;console=&amp;quot;comconsole&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /boot/loader.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now if you restart the VM (&lt;code&gt;shutdown -r now&lt;/code&gt;) you should be able to connect to it in a new terminal via &lt;code&gt;sudo virsh console freebsd11.0&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Auto-start VM&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo virsh autostart freebsd11.0&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Creating Users&lt;/h3&gt;
&lt;h4&gt;Adding a users group&lt;/h4&gt;
&lt;p&gt;Before creating a user we should create a "users" group to house them in. This is consistent with &lt;a href="https://archlinux.org"&gt;Arch Linux&lt;/a&gt; and will give us less problems down the line as long as the UIDs and GIDs match up.&lt;/p&gt;
&lt;p&gt;To create a users group with a GID of 100 use the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pw groupadd -n users -g &lt;span class="m"&gt;100&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Adding a user&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pw useradd -n user -g users -m &lt;span class="c1"&gt;# Create a user named &amp;#39;user&amp;#39;, with a primary group &amp;#39;users&amp;#39; and a home directory &amp;#39;/home/user&amp;#39; which is created for you&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configuring Storage&lt;/h2&gt;
&lt;h3&gt;Block Device Pass-through&lt;/h3&gt;
&lt;p&gt;ZFS likes working with raw disks, luckily we can pass them through to our FreeBSD guest. RedHat has excellent documentation on this &lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Virtualization_Administration_Guide/sect-Virtualization-Adding_storage_devices_to_guests-Adding_hard_drives_and_other_block_devices_to_a_guest.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For testing purposes you can use the following command to attach a block device:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;virsh attach-disk freebsd11.0 /dev/sr0 vdc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After executing that command you should see the disk in the FreeBSD guest:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo virsh console freebsd11.0
root@:~ &lt;span class="c1"&gt;# gpart show&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;       &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;44040315&lt;/span&gt;  vtbd0  GPT  &lt;span class="o"&gt;(&lt;/span&gt;21G&lt;span class="o"&gt;)&lt;/span&gt;
         &lt;span class="m"&gt;3&lt;/span&gt;       &lt;span class="m"&gt;118&lt;/span&gt;      &lt;span class="m"&gt;1&lt;/span&gt;  freebsd-boot  &lt;span class="o"&gt;(&lt;/span&gt;59K&lt;span class="o"&gt;)&lt;/span&gt;
       &lt;span class="m"&gt;121&lt;/span&gt;   &lt;span class="m"&gt;2097152&lt;/span&gt;      &lt;span class="m"&gt;2&lt;/span&gt;  freebsd-swap  &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.0G&lt;span class="o"&gt;)&lt;/span&gt;
   &lt;span class="m"&gt;2097273&lt;/span&gt;  &lt;span class="m"&gt;41943040&lt;/span&gt;      &lt;span class="m"&gt;3&lt;/span&gt;  freebsd-ufs  &lt;span class="o"&gt;(&lt;/span&gt;20G&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;44040313&lt;/span&gt;         &lt;span class="m"&gt;5&lt;/span&gt;         - free -  &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.5K&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;        &lt;span class="m"&gt;34&lt;/span&gt;  &lt;span class="m"&gt;3907029101&lt;/span&gt;  vtbd1  GPT  &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.8T&lt;span class="o"&gt;)&lt;/span&gt;
          &lt;span class="m"&gt;34&lt;/span&gt;  &lt;span class="m"&gt;3907029101&lt;/span&gt;         - free -  &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.8T&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To make this permanent you can edit the xml configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -E virsh edit freebsd11.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the following underneath the first &lt;code&gt;&amp;lt;disk&amp;gt;&lt;/code&gt; entry (there should only be one &lt;code&gt;&amp;lt;disk&amp;gt;&lt;/code&gt; in the entire file which should be our qcow2 boot medium):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;disk&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;block&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;device=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;disk&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;driver&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;qemu&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;raw&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;cache=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;dev=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/dev/sr0&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;target&lt;/span&gt; &lt;span class="na"&gt;dev=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;vdc&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;bus=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;virtio&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/disk&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now if you reboot the vm (&lt;code&gt;sudo virsh reboot freebsd11.0&lt;/code&gt;) and issue a &lt;code&gt;gpart show&lt;/code&gt; again, you should see the disk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The Linux kernel makes no guarantees over the disk ordering / labelling. &lt;strong&gt;Do Not&lt;/strong&gt; passthrough a disk via it's alphabetic identifier (e.g /dev/sda) instead use it's id (/dev/disk/by-id) or uuid (/dev/disk/by-uuid) which should be unique.&lt;/p&gt;
&lt;h2&gt;ZFS&lt;/h2&gt;
&lt;p&gt;I've &lt;strong&gt;not&lt;/strong&gt; used ZFS before but the FreeBSD Handbook has a "Quick Start Guide" &lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/zfs-quickstart.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For reference I'm working with 3x2tb drives which I intend to use in a Raid5 (RaidZ?) configuration.&lt;/p&gt;
&lt;h3&gt;Enable ZFS&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zfs_enable=&amp;quot;YES&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/rc.conf
service zfs start
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create zpool&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;zpool create storage raidz vtbd1 vtbd2 vtbd3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To verify that the zpool has been created you can issue the command &lt;code&gt;zpool list&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@:~ &lt;span class="c1"&gt;# zpool list&lt;/span&gt;
NAME      SIZE  ALLOC   FREE  EXPANDSZ   FRAG    CAP  DEDUP  HEALTH  ALTROOT
storage  &lt;span class="m"&gt;5&lt;/span&gt;.44T   161K  &lt;span class="m"&gt;5&lt;/span&gt;.44T         -     &lt;span class="m"&gt;0&lt;/span&gt;%     &lt;span class="m"&gt;0&lt;/span&gt;%  &lt;span class="m"&gt;1&lt;/span&gt;.00x  ONLINE  -
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create Storage&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;zfs create storage/home
zfs &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;copies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; storage/home
zfs &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;compression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;lz4 storage/home
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Hammer Time&lt;/h3&gt;
&lt;p&gt;At this point I'm already in love with ZFS but now it's time to fill this sucker with data and see what it's really got:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rsync -av --progress aidan@192.168.x.x:/tmp/gparted-roview-2DZ7RV/Music /storage/home
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After transfering data I ran &lt;code&gt;du -h /storage/home/Music&lt;/code&gt; which size reports exactly double the size on the source disk (presumably because we ran &lt;code&gt;zfs set copies=2 storage/home&lt;/code&gt;). It's nice that du tells me this since other filesystems such as btrfs on Linux often report disk usage incorrectly (yes, I know you can fix this with the &lt;code&gt;btrfs filesystem du&lt;/code&gt; and &lt;code&gt;btrfs filesystem df&lt;/code&gt; commands).&lt;/p&gt;
&lt;h2&gt;SSHD&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sshd_enable=&amp;quot;YES&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/rc.conf
service sshd start
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;NFS&lt;/h2&gt;
&lt;p&gt;Detailed information regarding NFS can be found in the FreeBSD Handbook &lt;a href="https://www.freebsd.org/doc/handbook/network-nfs.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/storage/home  -alldirs  192.168.x.x&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/exports
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpcbind_enable=&amp;quot;YES&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/rc.conf
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nfs_server_enable=&amp;quot;YES&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/rc.conf
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mountd_flags=&amp;quot;-r&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/rc.conf
service nfsd start
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Samba&lt;/h2&gt;
&lt;p&gt;Detailed information regarding Samba can be found in the FreeBSD handbook &lt;a href="https://www.freebsd.org/doc/handbook/network-samba.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pkg install samba46
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;samba_enable=&amp;quot;YES&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/rc.conf
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;samba_server_enable=&amp;quot;YES&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/rc.conf
service samba_server start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Modify the following samba at /usr/local/etc/smb4.conf for your needs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[global]&lt;/span&gt;
&lt;span class="na"&gt;workgroup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;WORKGROUP&lt;/span&gt;
&lt;span class="na"&gt;server string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Samba Server Version %v&lt;/span&gt;
&lt;span class="na"&gt;netbios name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;ExampleMachine&lt;/span&gt;
&lt;span class="na"&gt;wins support&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Yes&lt;/span&gt;
&lt;span class="na"&gt;security&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;user&lt;/span&gt;
&lt;span class="na"&gt;passdb backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;tdbsam&lt;/span&gt;

&lt;span class="c1"&gt;# Example: share /usr/src accessible only to &amp;#39;developer&amp;#39; user&lt;/span&gt;
&lt;span class="k"&gt;[src]&lt;/span&gt;
&lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/usr/src&lt;/span&gt;
&lt;span class="na"&gt;valid users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;developer&lt;/span&gt;
&lt;span class="na"&gt;writable&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;browsable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;read only&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;
&lt;span class="na"&gt;guest ok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;
&lt;span class="na"&gt;public&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;
&lt;span class="na"&gt;create mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0666&lt;/span&gt;
&lt;span class="na"&gt;directory mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0755&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>Switching from 1Password to Pass</title><link href="https://aidanharr.is/switching-from-1password-to-pass.html" rel="alternate"></link><published>2017-05-27T18:21:00+01:00</published><updated>2017-05-27T18:21:00+01:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2017-05-27:/switching-from-1password-to-pass.html</id><summary type="html">&lt;p&gt;I've decided to switch password managers from &lt;a href="https://1password.com/"&gt;1Password&lt;/a&gt; to &lt;a href="https://www.passwordstore.org/"&gt;Pass&lt;/a&gt;. This blog post will detail my thoughts on the subject and explain the pros and cons of doing so.&lt;/p&gt;
&lt;p&gt;Before I get started I feel like I wouldn't be doing my civic duty if I didn't take this time to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've decided to switch password managers from &lt;a href="https://1password.com/"&gt;1Password&lt;/a&gt; to &lt;a href="https://www.passwordstore.org/"&gt;Pass&lt;/a&gt;. This blog post will detail my thoughts on the subject and explain the pros and cons of doing so.&lt;/p&gt;
&lt;p&gt;Before I get started I feel like I wouldn't be doing my civic duty if I didn't take this time to tell you to use a password manager if you're not doing so already:&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;*USE A PASSWORD MANAGER&lt;/strong&gt;&lt;/h1&gt;
&lt;h3&gt;Why Pass?&lt;/h3&gt;
&lt;p&gt;You might be wondering why I'd choose pass, heck you might not have even heard of it before reading this ("pass" isn't exactly a very SEO friendly name). "What's wrong with 1Password" you might ask. Well as it turns out, a lot of things. Don't get me wrong it's a very good password manager and if it works for you then great. However I feel like I've gotten to the point where 1Password no longer suits my needs. 1Password was great while I was operating in the Apple bubble. Once upon a time I had an iPhone, an iPad and a Macbook and all was well with the world. Then I discovered the big bad &lt;strike&gt;Linux&lt;/strike&gt; GNU/Linux 🐧 (that's a penguin, for the uninitiated - or those without a decent font that supports &lt;strike&gt;emoji&lt;/strike&gt; Unicode).&lt;/p&gt;
&lt;p&gt;Believe it or not 1Password works surprisingly well under GNU/Linux using &lt;a href="https://www.winehq.org"&gt;Wine&lt;/a&gt;. The main issues I have with 1Password are as follows:&lt;/p&gt;
&lt;h4&gt;Closed source&lt;/h4&gt;
&lt;p&gt;While I have no reason to doubt that 1Password is in any way, shape, or form compromised, I can't help but feel that the strong and stable (pun intended) foundations of git and gpg hugely benefit pass over the black-box of 1Password.&lt;/p&gt;
&lt;h4&gt;Synchronisation&lt;/h4&gt;
&lt;p&gt;Local file synchronisation is a massive pain with 1Password. I refuse to use Dropbox and iCloud sync doesn't work on Windows or GNU/Linux so that's out of the question too. My current solution to this conundrum is a hodgepodge of &lt;a href="https://syncthing.net"&gt;Syncthing&lt;/a&gt; and using the wifi-sync. This is &lt;strong&gt;not&lt;/strong&gt; scalable and could no doubt cause problems if I continue down this path. Using git completely side-steps this issue altogether. I can sync using a local git repository or a private remote repository.&lt;/p&gt;
&lt;h3&gt;Disadvantages of Pass&lt;/h3&gt;
&lt;p&gt;While I see Pass as the way forward, it's not all bright and rosy, there are some things that I dislike about it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hard to migrate - &lt;a href="https://github.com/roddhjav/pass-import"&gt;pass-import&lt;/a&gt; exists but it didn't want to work at all. I'm now in a laborious process to slowly migrate each and every password I've built up over the years from 1Password to Pass. Not Good!&lt;/li&gt;
&lt;li&gt;Mobile Integration? - It looks like there's solid Android integration, iOS may be a challenge ;)&lt;/li&gt;
&lt;li&gt;Winblows - &lt;a href="https://github.com/mbos/Pass4Win"&gt;Pass4Win&lt;/a&gt; exists but is deprecated, WSL despite its hype doesn't support USB devices and I don't trust Windows enough to leave my GPG keys lying around. I guess I could use Virtualbox with USB pass-through for my Yubikey. I don't do any serious work on Windows anyway though, so I doubt this will be an issue.&lt;/li&gt;
&lt;li&gt;No support for storing files - I can botch it by base64 encoding files and may be able to simply store the files in the git repo but not sure how that'll work on other devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Despite its shortcomings I feel that pass is the way to go. It's more scalable than 1Password and is built on top of a rock solid foundation of gpg and git. It also doesn't hurt that it has solid integration with &lt;a href="https://github.com/klaasb/passdmenu"&gt;dmenu&lt;/a&gt; :).&lt;/p&gt;
&lt;p&gt;&lt;small&gt;*Big bold text added, for dramatic effect&lt;/small&gt;&lt;/p&gt;</content></entry><entry><title>Installing Dotnet Core on Arch Linux</title><link href="https://aidanharr.is/installing-dotnet-core-on-arch.html" rel="alternate"></link><published>2017-05-07T11:00:00+01:00</published><updated>2017-05-07T11:00:00+01:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2017-05-07:/installing-dotnet-core-on-arch.html</id><summary type="html">&lt;article style="display: block;font-style: normal;letter-spacing: 0;font-weight: 400;font-size: 16px;margin: 0 auto;width: 75%;white-space: pre-wrap;"&gt;
Installing and running dotnet core on ArchLinux is a bit of a pain. Thankfully there are some packages in the &lt;a href="https://aur.archlinux.org/packages/?K=dotnet%2D"&gt;AUR&lt;/a&gt; which slightly ease the process.

&lt;h3&gt;Re-Compiling OpenSSL&lt;/h3&gt;

Arch has removed support for openssl-v3 compatibility. This means you will need a patched version of OpenSSL before you even do anything …&lt;/article&gt;</summary><content type="html">&lt;article style="display: block;font-style: normal;letter-spacing: 0;font-weight: 400;font-size: 16px;margin: 0 auto;width: 75%;white-space: pre-wrap;"&gt;
Installing and running dotnet core on ArchLinux is a bit of a pain. Thankfully there are some packages in the &lt;a href="https://aur.archlinux.org/packages/?K=dotnet%2D"&gt;AUR&lt;/a&gt; which slightly ease the process.

&lt;h3&gt;Re-Compiling OpenSSL&lt;/h3&gt;

Arch has removed support for openssl-v3 compatibility. This means you will need a patched version of OpenSSL before you even do anything else. Luckily this is easy enough to do. Install &lt;a href="https://aur.archlinux.org/packages/customizepkg-git/"&gt;customizepkg-git&lt;/a&gt; from the AUR. Once customizepkg is installed add the following to &lt;code&gt;/etc/customizepkg.d/openssl&lt;/code&gt;:

&lt;code&gt;
replace#global#no-ssl3-method#zlib
replace#global#no-ssl3#zlib
&lt;/code&gt;

Now patch openssl as follows:

&lt;code&gt;yaourt -S openssl&lt;/code&gt;

&lt;h3&gt;Install Dotnet Core (sdk, coreclr and cli)&lt;/h3&gt;

&lt;code&gt;pacaur -S --needed icu icu58 libunwind lldb dotnet dotnet-cli dotnet-sdk&lt;/code&gt;

&lt;h3&gt;Testing Installation&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;
mkdir -p /tmp/dotnet
cd /tmp/dotnet
export DOTNET_CLI_TELEMETRY_OPTOUT=1 # You're going to want to add this to your shell's rc file
dotnet new console
dotnet restore
dotnet build
dotnet run
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Troubleshooting&lt;/h3&gt;

    &lt;h4&gt;Object reference not set to an instance of an object&lt;/h4&gt;

    This can be fixed by removing the templating directory as follows:

    &lt;code&gt;rm -rf ~/.templateengine&lt;/code&gt;

    &lt;a href="https://github.com/dotnet/templating/issues/657"&gt;dotnet/templating#657&lt;/a&gt;

&lt;/article&gt;</content></entry><entry><title>Mount CloneZilla Image</title><link href="https://aidanharr.is/mount-clonezilla-image.html" rel="alternate"></link><published>2017-02-02T08:00:00+00:00</published><updated>2017-02-02T08:00:00+00:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2017-02-02:/mount-clonezilla-image.html</id><summary type="html">&lt;p&gt;The contents of this article are taken from &lt;a href="http://blog.christosoft.de/2012/05/mount-clonezilla-image-to-restore-single-file-browse"&gt;blog.christosoft.de&lt;/a&gt; which I'm referencing for future use.&lt;/p&gt;
&lt;blockquote cite="http://blog.christosoft.de/2012/05/mount-clonezilla-image-to-restore-single-file-browse/" style="display: block;font-style: normal;letter-spacing: 0;font-weight: 400;font-size: 16px;margin: 0 auto;width: 75%;white-space: pre-wrap;"&gt;

&lt;h3&gt;Mount clonezilla image to restore single file (browse)&lt;/h3&gt;

&lt;a href="http://clonezilla.org/"&gt;Clonezilla&lt;/a&gt; is a fine tool to backup/restore/clone partitions or drives. It is very powerful, can handle both Linux and Windows partitions and so …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;The contents of this article are taken from &lt;a href="http://blog.christosoft.de/2012/05/mount-clonezilla-image-to-restore-single-file-browse"&gt;blog.christosoft.de&lt;/a&gt; which I'm referencing for future use.&lt;/p&gt;
&lt;blockquote cite="http://blog.christosoft.de/2012/05/mount-clonezilla-image-to-restore-single-file-browse/" style="display: block;font-style: normal;letter-spacing: 0;font-weight: 400;font-size: 16px;margin: 0 auto;width: 75%;white-space: pre-wrap;"&gt;

&lt;h3&gt;Mount clonezilla image to restore single file (browse)&lt;/h3&gt;

&lt;a href="http://clonezilla.org/"&gt;Clonezilla&lt;/a&gt; is a fine tool to backup/restore/clone partitions or drives. It is very powerful, can handle both Linux and Windows partitions and so on. If you do not know it, you should really give it a try. It is really free software (open source), which means it is also free to use for commercial purposes.

By the way, if you want to backup/restore images of Windows partitions/drives, I’d also recommend &lt;a href="http://www.runtime.org/driveimage-xml.htm"&gt;DriveImage XML&lt;/a&gt; which is also very powerful yet simple (only free for private use). Windows 7 has also built-in backup and imaging tools, which you can give a try. But this post is about Clonezilla.

One important feature that Clonezilla does not offer out of the box is browsing images to restore single files. You can only restore complete partitions or drives.

But there is a way around this, which is &lt;a href="http://ubuntuforums.org/showthread.php?t=872832"&gt;discussed in this forum thread&lt;/a&gt;, although not perfect as it requires lots of time and disk space as well.

The basic approach is to convert the whole image into a (probably huge) img-file that can be easily mounted. In the forum post linked above several different commands are discussed depending on your image file.
Here I’d like to show you what worked for me.

In my case, the file was compressed using gzip and it was an image of a linux partition (ext3). I used Ubuntu Linux to mount the image. The steps I took:

Install partclone (sudo apt-get install partclone)
Prepare an img-file somewhere where enough free disk space is available:

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="highlight kd"&gt;touch&lt;/span&gt;/dir-to-new-image/partition.img
&lt;/pre&gt;&lt;/div&gt;

You should have at least as much free disk space as the size of the image there.
Convert the clonezilla-image into the img-file:

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="hightlight kd"&gt;sudo cat&lt;/span&gt; /dir-to-images/partition.ext3.ptcl-img.gz.*
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="highlight kd" style="background: transparent;"&gt;sudo gzip&lt;/span&gt;-d -c
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="highlight kd" style="background: transparent;"&gt;sudo partclone.restore&lt;/span&gt;-C -s - -O /dir-to-new-image/partition.img&lt;/pre&gt;&lt;/div&gt;

(This is one line. Note the minus after -s. I overlooked it when I tried this first.)
This will take some time, dependent on how big the image and how fast your drive(s).
There are other commands in the forum thread for NTFS images and other compression formats.

Mount the img-file:

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="highlight kd"&gt;sudo mount&lt;/span&gt;-o loop -t ext3 /dir-to-new-image/partition.img /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

Thanks a lot to all posters of the forum mentioned above for these hints, especially bfitzhugh, nutria007, ttguy and gaebriel!

P.S.: It’s always good to have a (recent) backup 😉 One drive of mine just crashed after about two years in operation, so I know what I am talking about…

Think about what pain it would be if the drive of your laptop / desktop would crash just right now. If you get a bad feeling thinking about this, you should make a backup now.
&lt;/blockquote&gt;

&lt;hr/&gt;

&lt;p&gt;&lt;em&gt;NOTE: &lt;/em&gt; In my case I had to use the excellent &lt;a href="http://www.cgsecurity.org/wiki/TestDisk"&gt;testdisk&lt;/a&gt; to restore the NTFS boot sector. Without this the image wouldn't mount.&lt;/p&gt;</content></entry><entry><title>How Not To Use Docker</title><link href="https://aidanharr.is/how-not-to-use-docker.html" rel="alternate"></link><published>2016-06-06T17:11:00+01:00</published><updated>2016-06-06T17:11:00+01:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2016-06-06:/how-not-to-use-docker.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://aidanharr.is/glossary/docker/"&gt;Docker&lt;/a&gt; is an amazing tool
that's perfect for building Microservices. I'm still learning to use it
and if I'm being honest, I quite like it. I could see its power from the
onset. Docker is essentially a virtual machine (VM) without the overhead
of a VM (note: Docker isn't actually …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://aidanharr.is/glossary/docker/"&gt;Docker&lt;/a&gt; is an amazing tool
that's perfect for building Microservices. I'm still learning to use it
and if I'm being honest, I quite like it. I could see its power from the
onset. Docker is essentially a virtual machine (VM) without the overhead
of a VM (note: Docker isn't actually a VM I'm &lt;a class="reference external" href="https://blog.docker.com/2016/03/containers-are-not-vms/"&gt;generalising&lt;/a&gt;
here) unless you (ab)use it like me. You might have noticed that I've
recently added a &lt;a class="reference external" href="//aidanharr.is/portfolio/"&gt;&amp;quot;Portfolio&amp;quot; section&lt;/a&gt; to
this website to better market myself. The problem I had, was taking a
local &lt;a class="reference external" href="https://vagrantup.com"&gt;Vagrant&lt;/a&gt; environment and deploying it
to an existing VPS. Docker solves this problem rather nicely. It's a
horrible way to use Docker but all I needed to do to get things up and
running was create a Dockerfile using the &lt;a class="reference external" href="https://hub.docker.com/_/ubuntu/"&gt;ubuntu:trusty&lt;/a&gt; image and add each
line of my shell provisioning script to the Dockerfile as RUN statements
and create a bootstrap file to handle starting the LAMP stack once a
container has started. The result works rather nicely, however, I'll
likely investigate alternative solutions since monolithic Docker
containers are unlikely to hold their own against large amounts of
traffic and may not scale very well.&lt;/p&gt;
</content></entry><entry><title>Creating an OS X Base Box for Vagrant with Parallels</title><link href="https://aidanharr.is/creating-an-os-x-base-box-for-vagrant-with-parallels.html" rel="alternate"></link><published>2016-03-25T21:11:00+00:00</published><updated>2016-03-25T21:11:00+00:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2016-03-25:/creating-an-os-x-base-box-for-vagrant-with-parallels.html</id><summary type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Vagrant is a useful tool for managing virtual machines. It can be used
for setting up development and testing environments. This means code can
be built and tested in a clean and consistent environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A Mac Computer - I'm using a MacBook Pro Retina 15&amp;quot; Late 2013 model
running …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Vagrant is a useful tool for managing virtual machines. It can be used
for setting up development and testing environments. This means code can
be built and tested in a clean and consistent environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A Mac Computer - I'm using a MacBook Pro Retina 15&amp;quot; Late 2013 model
running OS X El Capitan (10.11.4) but this tutorial is likely to work
for any version of OS X that is compatible with parallels and
vagrant.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://vagrantup.com"&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.parallels.com"&gt;Parallels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/Parallels/vagrant-parallels"&gt;vagrant-parallels&lt;/a&gt;
(install it with vagrant;
&lt;tt class="docutils literal"&gt;vagrant plugin install &lt;span class="pre"&gt;vagrant-parallels&lt;/span&gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-creating-tuning-vm-configuration"&gt;
&lt;h2&gt;Step 1 - Creating &amp;amp; Tuning VM Configuration&lt;/h2&gt;
&lt;!-- raw.. code-block:: bash html

&lt;figure&gt; --&gt;
&lt;p&gt;&lt;a class="reference external" href="uploads/2016/03/Install-OS-X-10.11.4.out_.png"&gt;&lt;img alt="Screenshot of the Parallels Virtual Machine creation." class="alignnone size-medium wp-image-187" src="uploads/2016/03/Install-OS-X-10.11.4.out_-300x200.png" style="width: 50.0%;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw.. code-block:: bash html

&lt;/figure&gt; --&gt;
&lt;p&gt;After selecting the &amp;quot;Install OS X x.x.x Using the Recovery Partition&amp;quot;
option, Parallels will immediately boot the VM. Shut it down so we can
make some adjustments to the VM.&lt;/p&gt;
&lt;p&gt;Key things you might want to alter are the RAM, number of processors and
hard disk drive storage space. For my virtual machine I bumped the RAM
up to 4GB, changed the number of processors to 4 and changed the hard
disk size to 2TB. Most of these things can be altered later should you
need to.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-installing-os-x"&gt;
&lt;h2&gt;Step 2 - Installing OS X&lt;/h2&gt;
&lt;!-- raw.. code-block:: bash html

&lt;figure&gt; --&gt;
&lt;p&gt;&lt;a class="reference external" href="uploads/2016/03/InstallOSX.out_.png"&gt;&lt;img alt="Screenshot taken from the OS X El Capitan installation." class="alignnone size-medium wp-image-208" src="uploads/2016/03/InstallOSX.out_-300x235.png" style="width: 50.0%;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw.. code-block:: bash html

&lt;/figure&gt; --&gt;
&lt;p&gt;After altering the VM to your liking, proceed with the OS X installation
as you normally would ensuring that your username and password are both
set to 'vagrant'.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-installing-software-updates"&gt;
&lt;h2&gt;Step 3 - Installing Software Updates&lt;/h2&gt;
&lt;p&gt;Install any software updates using
&lt;tt class="docutils literal"&gt;sudo softwareupdate &lt;span class="pre"&gt;--install&lt;/span&gt; &lt;span class="pre"&gt;--all&lt;/span&gt;&lt;/tt&gt; or the AppStore.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-installing-parallels-tools"&gt;
&lt;h2&gt;Step 4 - Installing Parallels Tools&lt;/h2&gt;
&lt;p&gt;Install Parallels Tools&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-5-disabling-firewall"&gt;
&lt;h2&gt;Step 5 - Disabling Firewall&lt;/h2&gt;
&lt;p&gt;Ensure that the firewall is disabled (go to &amp;quot;System Preferences&amp;quot; --&amp;gt;
&amp;quot;Security &amp;amp; Privacy&amp;quot; --&amp;gt; &amp;quot;Firewall&amp;quot;)&lt;/p&gt;
&lt;!-- raw.. code-block:: bash html

&lt;h4&gt;

Step 6 - Enabling Remote Login --&gt;
&lt;!-- raw.. code-block:: bash html

&lt;/h4&gt; --&gt;
&lt;p&gt;Enable &amp;quot;Remote Login&amp;quot; (go to &amp;quot;System Preferences&amp;quot; --&amp;gt; &amp;quot;Sharing&amp;quot; --&amp;gt; Make
sure &amp;quot;Remote Login&amp;quot; is checked for all users)&lt;/p&gt;
&lt;!-- raw.. code-block:: bash html

&lt;h4&gt;

Step 7 - Downloading SSH Key Used for Authentication --&gt;
&lt;!-- raw.. code-block:: bash html

&lt;/h4&gt; --&gt;
&lt;p&gt;Download the vagrant insecure ssh key which is used to obtain authorised
access to the box:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /Users/vagrant/.ssh
chmod &lt;span class="m"&gt;0700&lt;/span&gt; /Users/vagrant/.ssh
curl -o /Users/vagrant/.ssh/authorized_keys --url https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub
chmod &lt;span class="m"&gt;0600&lt;/span&gt; /Users/vagrant/.ssh/authorized_keys
chown -R vagrant /Users/vagrant/.ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-8-setting-up-password-less-sudo-access"&gt;
&lt;h2&gt;Step 8 - Setting up password-less `sudo` access&lt;/h2&gt;
&lt;p&gt;Set up password-less `sudo` access:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;sudo visudo&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Add or modify the following lines as necessary:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Defaults &lt;span class="nv"&gt;env_keep&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SSH_AUTH_SOCK&amp;#39;&lt;/span&gt;
Defaults:vagrant !requiretty

&lt;span class="c1"&gt;# Add the vagrant user at the end of the file&lt;/span&gt;
vagrant &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;NOPASSWD:ALL
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-9-installing-software-necessary-for-provisioning"&gt;
&lt;h2&gt;Step 9 - Installing Software Necessary for Provisioning&lt;/h2&gt;
&lt;p&gt;Install the bare minimum needed to provision a VM e.g.
&lt;a class="reference external" href="https://developer.apple.com/xcode/"&gt;Xcode&lt;/a&gt;,
&lt;a class="reference external" href="http://brew.sh"&gt;Homebrew&lt;/a&gt; and &lt;a class="reference external" href="https://www.chef.io/"&gt;Chef&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-10-optimising-the-vm"&gt;
&lt;h2&gt;Step 10 - Optimising the VM&lt;/h2&gt;
&lt;p&gt;You can zero out free space using &lt;tt class="docutils literal"&gt;diskutil&lt;/tt&gt; as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;diskutil secureErase freespace &lt;span class="m"&gt;0&lt;/span&gt; Macintosh HD
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doing the above produced some errors but YMMV.&lt;/p&gt;
&lt;p&gt;After the above is done you can power off the VM (&lt;tt class="docutils literal"&gt;sudo halt&lt;/tt&gt;) and
compress the HDD using Parallels as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;prl_disk_tool compact --hdd /path/to/harddisk.hdd
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-11-packaging-the-vm"&gt;
&lt;h2&gt;Step 11 - Packaging the VM&lt;/h2&gt;
&lt;div class="section" id="create-metadata-json-file-inside-parallels-pvm-file-this-is-probably-in-documents-parallels"&gt;
&lt;h3&gt;Create metadata.json file inside parallels .pvm file (this is probably in ~/Documents/Parallels/):&lt;/h3&gt;
&lt;p&gt;The metadata.json file should look as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;provider&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;parallels&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you've done the above you can then package the box using the
following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar cvzf elcapitan64.box ./OS&lt;span class="se"&gt;\ &lt;/span&gt;X&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;.11.4.pvm ./metadata.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After this is done you can instruct Vagrant to add as an available box
as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant box add elcapitan64 elcapitan64.box
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In a new directory you can then run &lt;tt class="docutils literal"&gt;vagrant init elcapitan64&lt;/tt&gt; and
bring the machine up with &lt;tt class="docutils literal"&gt;vagrant up&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;If Vagrant has issues authenticating with the box over SSH refer to the
following &lt;a class="reference external" href="http://stackoverflow.com/questions/22922891/vagrant-ssh-authentication-failure"&gt;StackOverflow
question&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="acknowledgment"&gt;
&lt;h2&gt;Acknowledgment&lt;/h2&gt;
&lt;p&gt;A special thanks goes to &lt;a class="reference external" href="https://www.skoblenick.com/vagrant/vmware-fusion/creating-an-osx-base-box/"&gt;Ryan
Skoblenick&lt;/a&gt;
who greatly influenced this tutorial.&lt;/p&gt;
&lt;p&gt;Parallels also provides some helpful information on creating base boxes
&lt;a class="reference external" href="http://parallels.github.io/vagrant-parallels/docs/boxes/base.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="automation"&gt;
&lt;h2&gt;Automation&lt;/h2&gt;
&lt;p&gt;It should be possible to automate a lot of the above (perhaps by using
&lt;a class="reference external" href="https://www.packer.io"&gt;Packer&lt;/a&gt;?), something I'll be investigating
further in the future.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title> Change Wordpress theme depending on visitor IP address</title><link href="https://aidanharr.is/change-wordpress-theme-depending-on-visitor-ip-address.html" rel="alternate"></link><published>2015-10-11T18:46:00+01:00</published><updated>2015-10-11T18:46:00+01:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2015-10-11:/change-wordpress-theme-depending-on-visitor-ip-address.html</id><summary type="html">&lt;p&gt;Developing and testing in production is a terrible, terrible idea.
However until I set up a virtual machine development environment I have
little choice but to do so. Here's how to change the theme depending on
the user's IP address:&lt;/p&gt;
&lt;p&gt;Create a new plugin (you might want to use the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Developing and testing in production is a terrible, terrible idea.
However until I set up a virtual machine development environment I have
little choice but to do so. Here's how to change the theme depending on
the user's IP address:&lt;/p&gt;
&lt;p&gt;Create a new plugin (you might want to use the following directory
structure):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wordpress
└── wp-content
    └── plugins
        └── change-theme-by-ip-address
            └── change-theme-by-ip-address.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside your plugin add the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;Plugin Name: change-theme-by-ip-address&lt;/span&gt;
&lt;span class="cm"&gt;Description: Changes the Wordpress theme depending on the visitor&amp;#39;s IP address&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;fxn_change_theme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$IPADDRESS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// If your website is using CloudFlare you need to use the $_SERVER[&amp;quot;HTTP_CF_CONNECTING_IP&amp;quot;] variable&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;HTTP_CF_CONNECTING_IP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$IPADDRESS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;HTTP_CF_CONNECTING_IP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$IPADDRESS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REMOTE_ADDR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Change 127.0.0.1 to your public IP address&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;$IPADDRESS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your-theme-dev&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nv"&gt;$theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your-theme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$theme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fxn_change_theme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;option_template&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fxn_change_theme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;option_stylesheet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fxn_change_theme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable the plugin and you should notice your theme changes for your IP
address while at the same time everybody else has the old theme. This
allows you to safely make changes to your theme in production (although
it's still worth setting up a virtual machine for development in order
to ensure nothing goes wrong and if something does go wrong then no big
deal just restore the virtual machine from a snapshot).&lt;/p&gt;
</content></entry><entry><title> Mount device with specific user rights</title><link href="https://aidanharr.is/linux-mount-device-with-specific-user-rights.html" rel="alternate"></link><published>2015-06-03T16:11:00+01:00</published><updated>2015-06-03T16:11:00+01:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2015-06-03:/linux-mount-device-with-specific-user-rights.html</id><summary type="html">&lt;p&gt;Recently I bought myself a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Raspberry_Pi"&gt;Raspberry Pi
2&lt;/a&gt;. One of the first
things I wanted to do was to install &lt;a class="reference external" href="https://kodi.tv"&gt;Kodi&lt;/a&gt;. This
was easy enough thanks to the apt package manager included with
&lt;a class="reference external" href="https://www.raspbian.org"&gt;Rasbian&lt;/a&gt;. It's as simple as
&lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install kodi&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;However since the Kodi user data and cache …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I bought myself a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Raspberry_Pi"&gt;Raspberry Pi
2&lt;/a&gt;. One of the first
things I wanted to do was to install &lt;a class="reference external" href="https://kodi.tv"&gt;Kodi&lt;/a&gt;. This
was easy enough thanks to the apt package manager included with
&lt;a class="reference external" href="https://www.raspbian.org"&gt;Rasbian&lt;/a&gt;. It's as simple as
&lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install kodi&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;However since the Kodi user data and cache can grow quite large I
decided to place the .kodi folder on a USB drive. This was as simple as
copying the &lt;tt class="docutils literal"&gt;.kodi&lt;/tt&gt; folder from &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.kodi&lt;/span&gt;&lt;/tt&gt; to my USB drive mounted at
/mnt/USB and creating a symlink in &lt;tt class="docutils literal"&gt;/home/pi&lt;/tt&gt; to the USB using
&lt;tt class="docutils literal"&gt;ln &lt;span class="pre"&gt;-s&lt;/span&gt; &lt;span class="pre"&gt;/mnt/USB/.kodi&lt;/span&gt; &lt;span class="pre"&gt;/home/pi/.kodi&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;The above worked no problem at all however I quickly ran into problems
because by default my USB drive was mounted as root. Sure I could
&lt;tt class="docutils literal"&gt;chmod 777&lt;/tt&gt; the entire directories but this didn't seem like the best
way to go about things. A quick search online took me to the following
&lt;a class="reference external" href="https://superuser.com/questions/320415/linux-mount-device-with-specific-user-rights"&gt;SuperUser
post&lt;/a&gt;.
Within this post there was a nice one liner that allowed me to mount the
USB with the user pi.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mount -t deviceFileFormat -o &lt;span class="nv"&gt;umask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;filePermissons,gid&lt;span class="o"&gt;=&lt;/span&gt;ownerGroupID,uid&lt;span class="o"&gt;=&lt;/span&gt;ownerID /device /mountpoint
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I simply had to use the &lt;tt class="docutils literal"&gt;id&lt;/tt&gt; command to find the uid and guid of the
user pi (&lt;tt class="docutils literal"&gt;id pi&lt;/tt&gt;) and then place the command in &lt;tt class="docutils literal"&gt;/etc/rc.local&lt;/tt&gt; to
mount the device on boot, although I should probably move it to
&lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt;.&lt;/p&gt;
</content></entry><entry><title> Hello World</title><link href="https://aidanharr.is/hello-world.html" rel="alternate"></link><published>2015-05-24T22:37:00+01:00</published><updated>2015-05-24T22:37:00+01:00</updated><author><name>aidanharris</name></author><id>tag:aidanharr.is,2015-05-24:/hello-world.html</id><summary type="html">&lt;p&gt;I've meant to create this website for a while now but haven't had the
time necessary to set the website up. I snapped up the snarky .io domain
name favoured by developers and startups a while a go and today, or
rather tonight, I've finally dedicated the time necessary to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've meant to create this website for a while now but haven't had the
time necessary to set the website up. I snapped up the snarky .io domain
name favoured by developers and startups a while a go and today, or
rather tonight, I've finally dedicated the time necessary to setting
this site up.&lt;/p&gt;
&lt;p&gt;Admittedly it did take a lot longer than I'd anticipated and there were
several roadblocks such as forgetting to alter the firewall settings to
allow HTTPS traffic and then spending the next half hour wondering why
everything's broken (a rookie mistake I'll be sure to avoid in the
future).&lt;/p&gt;
&lt;p&gt;The above is an interesting answer to the following question:&lt;/p&gt;
&lt;blockquote&gt;
What is the purpose of this website?&lt;/blockquote&gt;
&lt;p&gt;There's many websites on the Internet that all fulfil many purposes.
This site is relatively small hosted on a small VPS in London provided
via &lt;a class="reference external" href="https://www.digitalocean.com/?refcode=a285f2bc1129"&gt;Digital
Ocean&lt;/a&gt;. The main
purpose of this site is to document my journey as a developer. I will be
writing about the various programming languages I decide to learn and
the tools I use. I want this site to essentially serve as a portfolio of
my knowledge and skills and allow me to use it as a reference.&lt;/p&gt;
</content></entry></feed>